{"version":3,"sources":["ImageUpload.js","App.js","serviceWorker.js","index.js"],"names":["jimp","require","download","convertURIToWebpURI","URI","console","log","btoa","length","Promise","resolve","reject","canvas","document","createElement","context","getContext","image","Image","addEventListener","width","height","drawImage","toDataURL","src","resizeAndConvert","_callee2","input","px","toWebp","_Users_jlaw_workspace_personal_whatsapp_stickers_convert_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","wrap","_context2","prev","next","abrupt","read","then","contain","getBase64Async","MIME_PNG","stop","this","loadFile","_callee4","file","type","_context4","reader","FileReader","onloadend","Object","_Users_jlaw_workspace_personal_whatsapp_stickers_convert_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8__","mark","_callee3","_context3","result","byteLength","t0","t1","sent","t2","t3","t4","readAsArrayBuffer","ImageUpload","props","_this","_Users_jlaw_workspace_personal_whatsapp_stickers_convert_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_Users_jlaw_workspace_personal_whatsapp_stickers_convert_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_Users_jlaw_workspace_personal_whatsapp_stickers_convert_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","_handleSubmit","e","preventDefault","_callee","_dataJson$stickers","tray","stickers","i","dataJson","_context","state","trayFile","stickersFiles","push","identifier","name","publisher","tray_image","replace","apply","_Users_jlaw_workspace_personal_whatsapp_stickers_convert_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","map","sticker","image_data","Buffer","JSON","stringify","toString","concat","_handleImageChange","setState","target","files","_handleInputChange","_Users_jlaw_workspace_personal_whatsapp_stickers_convert_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","id","value","_this2","react__WEBPACK_IMPORTED_MODULE_9___default","react_bootstrap_lib_Form__WEBPACK_IMPORTED_MODULE_10___default","onSubmit","Group","as","Row","controlId","Label","column","sm","react_bootstrap_lib_Col__WEBPACK_IMPORTED_MODULE_12___default","Control","required","onChange","isInvalid","test","Feedback","className","multiple","react_bootstrap_lib_Button__WEBPACK_IMPORTED_MODULE_13___default","React","Component","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","react_default","Container_default","style","marginTop","Navbar_default","bg","expand","marginBottom","Brand","Row_default","Col_default","lg","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0133ec40.chunk.js","sourcesContent":["import React from 'react';\nimport Form from 'react-bootstrap/lib/Form';\nimport Row from 'react-bootstrap/lib/Row';\nimport Col from 'react-bootstrap/lib/Col';\nimport Button from 'react-bootstrap/lib/Button';\n\nconst jimp = require('jimp');\nconst download = require('downloadjs')\n\nfunction convertURIToWebpURI(URI) {\n  console.log(\"png size\" + btoa(URI).length);\n  return new Promise(function(resolve, reject) {\n    if (URI == null) return reject();\n    var canvas = document.createElement('canvas'),\n      context = canvas.getContext('2d'),\n      image = new Image();\n    image.addEventListener('load', function() {\n      canvas.width = image.width;\n      canvas.height = image.height;\n      context.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n      resolve(canvas.toDataURL(\"image/webp\"));\n    }, false);\n    image.src = URI;\n  });\n}\n\n\nasync function resizeAndConvert(input, px, toWebp) {\n  return jimp.read(input).then(image => {\n    if (toWebp) {\n      return image.contain(px, px).getBase64Async(jimp.MIME_PNG).then(convertURIToWebpURI);\n    }\n    return image.contain(px, px).getBase64Async(jimp.MIME_PNG);\n  })\n}\n\nasync function loadFile(file, type) {\n  return new Promise((resolve, reject) => {\n    let reader = new FileReader();\n\n    reader.onloadend = async () => {\n      console.log('buffer size:' + reader.result.byteLength)\n      try {\n        if (type === 'tray') {\n          resolve(await resizeAndConvert(reader.result, 96, false));\n        } else if (type === 'stickers') {\n          resolve(await resizeAndConvert(reader.result, 512, true));\n        }\n      } catch (e) {\n        reject(e);\n      }\n    };\n    reader.readAsArrayBuffer(file);\n  }\n)\n}\n\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      identifier: '',\n      name: '',\n      publisher: '',\n      trayFile: null,\n      stickersFiles: null,\n    };\n  }\n\n  _handleSubmit = (e) => {\n    e.preventDefault();\n\n    (async () => {\n      const tray = await loadFile(this.state.trayFile, 'tray');\n      const stickers = [];\n      for (let i = 0; i < this.state.stickersFiles.length; i++) {\n        stickers.push(await loadFile(this.state.stickersFiles[i], 'stickers'));\n      }\n\n      const dataJson = {\n        \"identifier\": this.state.identifier,\n        \"name\": this.state.name,\n        \"publisher\": this.state.publisher,\n        \"tray_image\": tray.replace('data:image/png;base64,', ''),\n        \"stickers\": [\n        ]\n      };\n\n      dataJson.stickers.push(...stickers.map(sticker => {\n        console.log(\"webp size\" + btoa(sticker).length);\n        return {\n          image_data: sticker.replace('data:image/webp;base64,', '')\n        }\n      }));\n\n      download( 'data:application/json;base64,' + new Buffer(JSON.stringify(dataJson)).toString('base64'), `${this.state.identifier}.json`, 'application/json');\n\n      console.log(JSON.stringify(dataJson));\n    })()\n  };\n\n  _handleImageChange = (e, type) =>{\n    e.preventDefault();\n\n    if (type === 'tray') {\n      this.setState({\n        trayFile: e.target.files[0]\n      });\n    } else if (type === 'stickers') {\n      this.setState({\n        stickersFiles: e.target.files\n      });\n    }\n\n  };\n\n  _handleInputChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  render() {\n    return (\n        <Form onSubmit={(e)=>this._handleSubmit(e)}>\n          <Form.Group as={Row} controlId=\"identifier\">\n            <Form.Label column sm={4}>Identifier</Form.Label>\n            <Col sm={6}>\n              <Form.Control type=\"text\" required onChange={this._handleInputChange} isInvalid={!/^[A-Za-z0-9-_.\\s]*$/.test(this.state.identifier)} />\n              <Form.Control.Feedback type=\"invalid\">\n                {'Alphanumeric characters with \".\", \"_\", \"-\" or \" \" only '}\n              </Form.Control.Feedback>\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"name\">\n            <Form.Label column sm={4}>Pack Name</Form.Label>\n            <Col sm={6}>\n              <Form.Control type=\"text\" required onChange={this._handleInputChange} />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"publisher\">\n            <Form.Label column sm={4}>Publisher</Form.Label>\n            <Col sm={6}>\n              <Form.Control type=\"text\" required onChange={this._handleInputChange} />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"formTrayFile\">\n            <Form.Label column sm={4}>Tray Icon</Form.Label>\n            <Col sm={8}>\n              <div className=\"custom-file\">\n                <Form.Control className=\"custom-file-input\" type=\"file\" required onChange={(e)=>this._handleImageChange(e, 'tray')} />\n                <Form.Label className=\"custom-file-label\">{this.state.trayFile ? this.state.trayFile.name : 'Choose file (PNG, any resolution)' }</Form.Label>\n              </div>\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"formStickersFiles\">\n            <Form.Label column sm={4}>Stickers (3 - 30 images)</Form.Label>\n            <Col sm={8}>\n              <div className=\"custom-file\">\n                <Form.Control className=\"custom-file-input\" type=\"file\" required multiple onChange={(e)=>this._handleImageChange(e, 'stickers')} />\n                <Form.Label className=\"custom-file-label\">{this.state.stickersFiles ? `${this.state.stickersFiles.length} file(s) selected` : 'Choose file (PNG, any resolution)' }</Form.Label>\n              </div>\n            </Col>\n          </Form.Group>\n          <Button type=\"submit\">Convert Images</Button>\n        </Form>\n    )\n  }\n}\n\nexport default ImageUpload\n","import React from 'react';\nimport ImageUpload from './ImageUpload';\nimport Container from 'react-bootstrap/lib/Container';\nimport Row from 'react-bootstrap/lib/Row';\nimport Col from 'react-bootstrap/lib/Col';\nimport Navbar from 'react-bootstrap/lib/Navbar';\nimport Nav from 'react-bootstrap/lib/Nav';\n\n// import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n\n          <Container style={{marginTop: '20px'}}>\n            <Navbar bg=\"light\" expand=\"lg\" style={{marginBottom: '20px'}}>\n              <Navbar.Brand>WhatsApp Sticker Converter</Navbar.Brand>\n            </Navbar>\n\n            <Row className=\"justify-content-md-center\">\n              <Col lg={8}>\n                <ImageUpload></ImageUpload>\n              </Col>\n            </Row>\n          </Container>\n\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
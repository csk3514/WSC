{"version":3,"sources":["ImageUpload.js","App.js","serviceWorker.js","index.js"],"names":["jimp","require","download","convertURIToWebpURI","URI","Promise","resolve","reject","canvas","document","createElement","context","getContext","image","Image","addEventListener","width","height","drawImage","toDataURL","src","resizeAndConvert","_callee2","input","px","toWebp","_Users_jlaw_workspace_personal_whatsapp_stickers_convert_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","wrap","_context2","prev","next","abrupt","read","then","contain","getBase64Async","MIME_PNG","stop","this","loadFile","_callee4","file","type","_context4","reader","FileReader","onloadend","Object","_Users_jlaw_workspace_personal_whatsapp_stickers_convert_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_8__","mark","_callee3","_context3","t0","result","t1","sent","t2","t3","t4","readAsArrayBuffer","ImageUpload","props","_this","_Users_jlaw_workspace_personal_whatsapp_stickers_convert_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_Users_jlaw_workspace_personal_whatsapp_stickers_convert_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_Users_jlaw_workspace_personal_whatsapp_stickers_convert_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","_handleSubmit","e","preventDefault","_callee","_dataJson$stickers","tray","stickers","i","dataJson","_context","state","trayFile","stickersFiles","length","push","identifier","name","publisher","tray_image","replace","apply","_Users_jlaw_workspace_personal_whatsapp_stickers_convert_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","map","sticker","image_data","Buffer","JSON","stringify","toString","concat","console","log","_handleImageChange","setState","trayValue","target","value","files","stickersValue","_handleInputChange","field","_Users_jlaw_workspace_personal_whatsapp_stickers_convert_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","_this2","imagePreviewUrl","react__WEBPACK_IMPORTED_MODULE_9___default","className","onSubmit","onChange","multiple","onClick","React","Component","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","pictures","onDrop","bind","assertThisInitialized","picture","react_default","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb2b7dc2.chunk.js","sourcesContent":["import React from 'react';\n\nconst jimp = require('jimp');\nconst download = require('downloadjs')\n\nfunction convertURIToWebpURI(URI) {\n  return new Promise(function(resolve, reject) {\n    if (URI == null) return reject();\n    var canvas = document.createElement('canvas'),\n      context = canvas.getContext('2d'),\n      image = new Image();\n    image.addEventListener('load', function() {\n      canvas.width = image.width;\n      canvas.height = image.height;\n      context.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n      resolve(canvas.toDataURL(\"image/webp\", 1));\n    }, false);\n    image.src = URI;\n  });\n}\n\n\nasync function resizeAndConvert(input, px, toWebp) {\n  return jimp.read(input).then(image => {\n    if (toWebp) {\n      return image.contain(px, px).getBase64Async(jimp.MIME_PNG).then(convertURIToWebpURI);\n    }\n    return image.contain(px, px).getBase64Async(jimp.MIME_PNG);\n  })\n}\n\nasync function loadFile(file, type) {\n  return new Promise((resolve, reject) => {\n    let reader = new FileReader();\n\n    reader.onloadend = async () => {\n      try {\n        if (type === 'tray') {\n          resolve(await resizeAndConvert(reader.result, 96, false));\n        } else if (type === 'stickers') {\n          resolve(await resizeAndConvert(reader.result, 512, true));\n        }\n      } catch (e) {\n        reject(e);\n      }\n    }\n    reader.readAsArrayBuffer(file);\n  }\n)\n}\n\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  _handleSubmit = (e) => {\n    e.preventDefault();\n\n    (async () => {\n      const tray = await loadFile(this.state.trayFile, 'tray');\n      const stickers = [];\n      for (let i = 0; i < this.state.stickersFiles.length; i++) {\n        stickers.push(await loadFile(this.state.stickersFiles[i], 'stickers'));\n      }\n\n      const dataJson = {\n        \"identifier\": this.state.identifier,\n        \"name\": this.state.name,\n        \"publisher\": this.state.publisher,\n        \"tray_image\": tray.replace('data:image/png;base64,', ''),\n        \"stickers\": [\n        ]\n      }\n\n      dataJson.stickers.push(...stickers.map(sticker => ({\n      image_data: sticker.replace('data:image/webp;base64,', '')}\n      )));\n\n      download( 'data:application/json;base64,'+ new Buffer(JSON.stringify(dataJson)).toString('base64'), `${this.state.identifier}.json`, 'application/json');\n\n      console.log(JSON.stringify(dataJson));\n    })()\n  };\n\n  _handleImageChange = (e, type) =>{\n    e.preventDefault();\n\n\n    if (type === 'tray') {\n      this.setState({\n        trayValue: e.target.value,\n        trayFile: e.target.files[0]\n      });\n    } else if (type === 'stickers') {\n      this.setState({\n        stickersValue: e.target.value,\n        stickersFiles: e.target.files\n      });\n    }\n\n  }\n\n  _handleInputChange = (e, field) => {\n    this.setState({\n      [field]: e.target.value\n    })\n  }\n\n  render() {\n    let {imagePreviewUrl} = this.state;\n    let $imagePreview = null;\n    if (imagePreviewUrl) {\n      $imagePreview = (<img src={imagePreviewUrl} />);\n    } else {\n      $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\n    }\n\n    return (\n      <div className=\"previewComponent\">\n        <form onSubmit={(e)=>this._handleSubmit(e)}>\n\n          <div>\n            <label>\n              Identifier:\n              <input type=\"text\" onChange={(e)=>this._handleInputChange(e, 'identifier')} />\n            </label>\n          </div>\n\n          <div>\n            <label>\n              Pack Name:\n              <input type=\"text\" onChange={(e)=>this._handleInputChange(e, 'name')} />\n            </label>\n          </div>\n\n          <div>\n            <label>\n              Publisher:\n              <input type=\"text\" onChange={(e)=>this._handleInputChange(e, 'publisher')} />\n            </label>\n          </div>\n\n          <div>\n            <label>\n              Tray Icon PNG:\n              <input type=\"file\" onChange={(e)=>this._handleImageChange(e, 'tray')} />\n            </label>\n          </div>\n          <div>\n            <label>\n              Stickers PNGs (3 - 30 images):\n              <input type=\"file\" multiple onChange={(e)=>this._handleImageChange(e, 'stickers')} />\n            </label>\n          </div>\n          <hr/>\n          <button className=\"submitButton\"\n                  type=\"submit\"\n                  onClick={(e)=>this._handleSubmit(e)}>Convert Images</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default ImageUpload\n","import React from 'react';\nimport ImageUpload from './ImageUpload';\n\nimport './App.css';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { pictures: [] };\n        this.onDrop = this.onDrop.bind(this);\n    }\n\n    onDrop(picture) {\n        this.setState({\n            pictures: this.state.pictures.concat(picture),\n        });\n    }\n\n    render() {\n        return (\n            <ImageUpload></ImageUpload>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}